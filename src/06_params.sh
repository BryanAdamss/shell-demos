#!/bin/bash

# shell 可以读取调用脚本时传入的参数



# 尝试进入到src目录，并使用./06_params.sh test1 test2 test3调用，查看输出
# 参数以空格做为分割；若参数中含有空格，应该使用双引号将参数括起来；

# $0 执行的文件名
# $1 第一个参数
# $2 第二个参数，以此类推
# $# 传递到脚本的参数个数
# $* 以一个单字符串显示所有向脚本传递的参数，所有参数拼接成一个字符串输出
# $@ 与$*类似，每个参数当成一个字符串输出
# $$ 代表脚本运行的当前进程ID号
# $! 代表后台运行的最后一个进程的ID号
# $- 显示Shell使用的当前选项，与set命令功能相同。
# $? 显示最后命令的退出状态。0表示没有错误，其他任何值表明有错误。

echo "Shell 传递参数实例！"
echo "执行的文件名：$0"
echo "第一个参数为：$1"
echo "第二个参数为：$2"
echo "参数个数为：$#"
echo "参数列表为：$*"
echo "参数列表为：$@"
echo "当前进程ID：$$"
echo "后台运行的最后一个进程的ID：$!"
echo "当前选项：$-"
echo "命令的退出状态：$?"


# $*、$@的不同
# 只有在双引号中体现出来。假设在脚本运行时写了三个参数 1、2、3，，则 " * " 等价于 "1 2 3"（传递了一个参数），而 "@" 等价于 "1" "2" "3"（传递了三个参数）。
echo "-- \$* 演示 ---"
for i in "$*"; do
    echo $i
done

echo "-- \$@ 演示 ---"
for i in "$@"; do
    echo $i
done